Technical and functional details for game of life simulator

Programming Language:  PHP 5.4 and JavaScript

Overview:
---------
This application simulates game of life.  It needs initial input and then the game continues based on its evolution. 
It’s a two dimensional grid having cells either active or inactive. Each cell’s state is determined by the state of 
its immediate neighbors. 
The application starts with creating an empty board. Then as an initial input,  a few cells are activated on random basis. After this a loop is executed for given number of times to find neighbors of every cell and create a new pattern based on neighbor’s state.

Important Functions:
---------------------
1.	createBoard:  This function is used to create initial board for the game.  This function accepts 3 arguments, $max_x and $max_y for grid size and $arr, an empty array. It will create a board with all inactive cells. The board cells will be stored in $arr.

2.	createLife: This function creates a board with random active cells.  This function accepts 3 arguments, $max_x ,$max_y and $arr. 

3.	checkNeighbors:  This is an important function to check all immediate neighbors of a cell. Here we keep a track of count of neighbors for all the cells. Based on it we decide to activate or inactivate a cell. For this we follow a set of rules as mentioned below,

    a.	Any live cell with fewer than two live neighbors dies, as if caused by under-population.
    b.	Any live cell with two or three live neighbors lives on to the next generation.
    c.	Any live cell with more than three live neighbors dies, as if by overcrowding.
    d.	Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.
  This function is called for a limited number. In our case we are calling it for 15 times.

4.	print_board: This function is used to print the generated life board on browser.

5.	callSleep: This function is used to hault the script execution for a second.
